#!/usr/bin/env node
var debug = require('debug')('SDHacks2015');
var app = require('../app');
var TIME_BEFORE_VOTE = 15000;
var TIME_TO_VOTE = 6000;

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

// Setting up socket.io
var io = require('socket.io').listen(server);
var voteStarted = true;
var timer;

io.on('connection', function(socket){
    console.log('a user connected');

    timer = setTimeout(endVote, TIME_BEFORE_VOTE + TIME_TO_VOTE);
    /*
    if(!voteStarted) {
        retrieveStory();
        timer = setTimeout(startVote, TIME_BEFORE_VOTE);
    }
    else {
        timer = setTimeout(retrieveStory, TIME_TO_VOTE);
    }
    */

    socket.on('disconnect', function(){
        console.log('user disconnected');
    });
    socket.on('chat message', function(msg){
        io.emit('emit message', msg);
    });
    socket.on('vote', function(index){
        io.emit('emit vote', index);
    });

    socket.on('start vote timer', function(){
        //io.emit('emit end vote');
        clearTimeout(timer);
        setTimeout(startVote, TIME_BEFORE_VOTE);
    });
    socket.on('end vote timer', function(){
        //io.emit('emit start vote');
        setTimeout(endVote, TIME_TO_VOTE);
    });

    function startVote() {
        if(!voteStarted) {
            console.log('starting vote');
            voteStarted = true;
            io.emit('emit start vote');
        }
    }

    function endVote() {
        if(voteStarted) {
            console.log('ending vote');
            voteStarted = false;
            io.emit('emit end vote');
        }
    }

    // Get story from database
    function retrieveStory() {

    }
});
